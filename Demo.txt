Structure Padding removing via Data Packing:-

#include <stdio.h>
#include <string.h>
#pragma pack(1)

struct Shop{
    double cost;//8
    union{
        struct{
            char title[19];//19
            int cost1;//4
        }book;
        int pen_cost;//4
    }item;
};

int main()
{
    struct Shop s;
    s.item.pen_cost = 20;
    printf("size=%ld",sizeof(s));
    return 0;
}

--------------------------------------------------
--------------------------------------------------

File handling writing in binary mode:-

#include <string.h>
#pragma pack(1)

int main()
{
    int arr[3] = {57,78,89};
    FILE *fptr;
    fptr = fopen("read_write.bin","wb");
    if(fptr == NULL){
        printf("Error! Opening file");
    }
    //fwrite(arr,sizeof(arr),1,fptr);
    fread(arr,sizeof(arr),1,fptr);
    for(int i = 0; i < 3; i++){
        printf("arr[%d]=%d\n",i,arr[i]);
    }
    fclose(fptr);
    return 0;
}

--------------------------------------------------
--------------------------------------------------

File handling writing in binary mode then reading:-

#include <stdio.h>
#include <string.h>
#pragma pack(1)

struct Numbers{
    int num1,num2;
};

int main(){
    struct Numbers num;
    FILE *fptr;
    fptr = fopen("read_write_seek.bin","wb");
    
    if(fptr == NULL){
        printf("Error! Opening file");
    }
    
    for(int counter = 1; counter < 3; ++counter){
        num.num1 = 3*counter;
        num.num2 = 5+counter;
        //writing numbers into binary files
        fwrite(&num,sizeof(struct Numbers),1,fptr);
        printf("%d", num.num1);
    }
    
    fclose(fptr);
    
    
    fptr = fopen("read_write_seek.bin","rb");
    if(!fptr){
        return 1;
    }
    
    for(int i = 1; i < 3; i++){
        //reading contents from a binary file
        fread(&num, sizeof(struct Numbers), 1, fptr);
        printf("%d %d\n",num.num1,num.num2);
        fseek(fptr,sizeof(struct Numbers),SEEK_SET);
    }
    
    fseek(fptr,sizeof(struct Numbers),SEEK_END);
    printf("%d %d\n",num.num1,num.num2);
    fclose(fptr);
    
    return 0;
}


---------------------------------------------
---------------------------------------------
Assignment operator with structure:-
#include <stdio.h>
#include <string.h>
#pragma pack(1)

struct Notebook{
    char color[10];
    float cost;
}ruled;

struct Note_book{
    char color[10];
    float cost1;
}unruled;

int main(){
    struct Notebook ruled = {"Grey",80.00};
    printf("Color of ruled notebook = %s\n",ruled.color);
    
    struct Note_book nb1 = {"Blue",70.00}, nb2;
    nb2 = nb1; //assigning the nb1 values to nb2
    
    printf("Color=%s cost1 = %f\n", nb1.color, nb2.cost1);
    
    unruled = nb2; //assigning nb2 values to unruled(occurs in same structure)
    printf("Color = %s Cost1 = %f\n",nb1.color,unruled.cost1);
    
    //ruled = nb1;
    //printf("%s %f\n",ruled.color, ruled.cost);
    //if we will uncomment above commented line it will give error,
    //we can't assign one structure in anotherstructure
    return 0;
}

----------------------------------------------------------------------------------
----------------------------------------------------------------------------------

//Arrays of structure and arrays within structure

#include <stdio.h>
#include <string.h>

struct student{
    int roll_no;
    char name[10];//arrays within the structure
};

int main(){
    struct student st[2];//array of structures
    printf("Enter Records of 2 students\n");
    for(int i = 0; i < 2; i++){
        printf("Enter RollNo.");
        scanf("%d",&st[i].roll_no);
        printf("Enter Name: ");
        scanf("%s",st[i].name);
    }
    
    printf("\nStudent Information: ");
    for(int i = 0; i < 2; i++){
        printf("\nRollno:%d Name:%s",st[i].roll_no, st[i].name);
    }
    return 0;
}

-------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------
Substring:-
#include <stdio.h>
#include <string.h>

void getString(int pos, int len, int c, char string[])
{
    char substring[100];
    while(c < len){
        substring[c] = string[pos+c-1];
        c++;
    }
    substring[c] = '\0';
    printf("%s",substring);
}

int main()
{
    int pos = 6, len = 3, c = 0;
    char string[] = "geeksforgeeks";
    printf("String: %s ", string);
    printf("\nsubstring is: ");
    getString(pos, len, c, string);
    return 0;
}

----------------------------------------------------------------------------
----------------------------------------------------------------------------
Substring with use of strncpy() function:- 

#include <stdio.h>
#include <string.h>

int main()
{
    int pos = 6, len = 5;
    char string[14] = "geeksforgeeks";
    char substring[14];
 
    printf("String: %s ", string);
    printf("\nsubstring is: ");

    strncpy(substring,string+(pos-1),len);
    printf("%s",substring);
    
    return 0;
}


------------------------------------------------------------------------------
------------------------------------------------------------------------------
strtok():-
#include <stdio.h>
#include <string.h>

int main()
{
	char str[] = "Geeks-for-Geeks";

	// Returns first token
	char* token = strtok(str, " - ");

	// Keep printing tokens while one of the
	// delimiters present in str[].
	while (token != NULL) {
	    printf(" Before strtok= %s\n", &token[strlen(token)]);
		printf(" Before strtok= %s\n", token);
		token = strtok(NULL, "-");
		printf(" After strtok= %s\n", token);
	}
	return 0;
}

----------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------

Length Manually :-

#include <stdio.h>

int length(char *s) { 
    int count=0;
    
    while(*s!='\0') {
        count++;
        printf("%c",*s);
        *s++;
    }
    
    return count;
}

int main(){
    char str[20] = "Hello";
    printf("length = %d",length(str));
}

---------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------

"The sun rises in the east" --> {"The","sun","rises","in","the","east"}.

#include <stdio.h>
#include <string.h>

int main()
{
    char str[] = "The sun rises in the east";
    printf("{\"");
    for(int i = 0; i < strlen(str); i++){
        if(str[i] == ' '){
            printf("\"");
            printf(",");
            printf("\"");
        }else{
            printf("%c",str[i]);
        }
    }
    printf("\"}");
    return 0;
}
---------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------
Multiple types of String function :-

#include <stdio.h>
#include<string.h>

int main()
{
    char *str = "The sun rises in the east";
    char d1[100];
    
    strcpy(d1,str);
    printf("%s\n",d1);
    
    char *val = strstr(str,"in");
    printf("%s\n",val);
    
    val = strchr(str,'i');
    printf("%s\n",val);
    
    printf("%s\n",&str[0]);
    int index = val - &str[0];
    printf("%d\n",index);
    
    val = strrchr(str,'e');
    printf("%s\n",val);
    
    index = val - &str[0];
    printf("%d\n",index);
    
    char dest[6];
    strncpy(dest,str+index,3);
    printf("%s\n",dest);
    
    printf("%s\n",str+index);
    printf("strncmp=%i\n",strncmp(str+index,"rises",5));
    
    char d2[6];
    strncat(d2,str+index,2);
    printf("d2 = %s\n",d2);
    
    return 0;
}
------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------

#include <stdio.h>

int main(){
    // int arr[100];
    // int *num = arr, n;
    // printf("How many value you will be enter for array:\n");
    // scanf("%d",&n);
    // printf("Enter %d values seprated by space:\n",n);
    // for(int i = 0; i < n; i++){
    //     scanf("%d",num+i);
    // }
    // for(int i  = 0; i < n; i++){
    //     printf("%d ",*(num+i));
    // }
    
    int x = 5;
    void *p = &x;
    printf("%d",*(int*)p);
}

-----------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------

include <stdio.h>

int sortArray(int *ptr, int n){
    for(int count = 0; count < n; count++){
        for(int j = 0; j < n - 1 - count; j++){
            if(*(ptr+j) > *(ptr+j+1)){
                int temp = *(ptr+j);
                *(ptr+j) = *(ptr+j+1);
                *(ptr+j+1) = temp;
            }
        }
    }
    
    for(int i = 0; i < n; i++){
        printf("%d ",*(ptr+i));
    }
}

int main() 
{
    //Start writing your code here
    int arr[] = {60,20,50,10,30};
    int n = sizeof(arr)/sizeof(arr[0]);
    sortArray(arr, n);
    return 0;
}
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------

<--Function Pointer-->

#include <stdio.h>
#include <math.h>

int f1(int x, int y){
    return x+y;
}

int main() 
{
    int x = 5, y = 6;
    int (*p)(int, int);
    p = f1; // p = &f1; We can write like this too.
    printf("%d",p(x,y));
}
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
<-Check Prime Number->

#include <stdio.h>
#include <math.h>

int checkPrime(int num){
    int flag = 0;
    for(int i = 2; i*i < num; i++){
        if(num % i == 0){
            flag = 1;
            break;
        }
    }
    
    if(flag == 1){
        printf("Input number is not prime");
    }else{
        printf("Number is Prime");
    }
    
}

int main() 
{
    int num;
    printf("Enter a number:\n");
    scanf("%d",&num);
    checkPrime(num);
}

------------------------------------------------------------------------------------
------------------------------------------------------------------------------------

#include<stdio.h>

int swap(int *x, int *y){
    int t = *x;
    *x = *y;
    *y = t;
}
 
int main(){
    int n1, n2;
    printf("Enter the value of n1 and n2 seprated by space:\n");
    scanf("%d %d", &n1, &n2);
    printf("Before swapping: n1 = %d, n2 = %d\n", n1, n2);
    swap(&n1, &n2);
    printf("After swapping: n1 = %d, n2 = %d", n1, n2);
}

------------------------------------------------------------------------------------
------------------------------------------------------------------------------------

<---Function – Passing and returning multiple values--->

#include <stdio.h>

int minOfNums(int *p, int n){
    int min = *p;
    for(int i = 1; i < n; i++){
        if(min > *(p+i)){
            min = *(p+i);
        }
    }
    return min;
}

int maxOfNums(int *p, int n){
    int max = *p;
    for(int i = 1; i < n; i++){
        if(max < *(p+i)){
            max = *(p+i);
        }
    }
    return max;
}

int main(){
    int arr[] = {25, 11, 35, 65, 20};
    int n = sizeof(arr)/sizeof(arr[0]);
    int max = maxOfNums(arr,n);
    int min = minOfNums(arr,n);
    printf("Minimum value is: %d\n", min);
    printf("Maximum vlaue is: %d", max);
}

--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
<-Recursion->
<--Write a program in C to convert a decimal number to binary using recursion.-->

#include <stdio.h>

int dtob(int n){
    if(n == 1){
        return 1;
    }
    int binary = 10*dtob(n/2)+n%2;
    return binary;
}

int main(){
    int n;
    printf("Enter a number:\n");
    scanf("%d",&n);
    int bn = dtob(n);
    printf("The Binary value of decimal no. %d is : %d", n, bn);
}

---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
<--Program to count total number of letters,digits and special character in a program-->
 .
#include <stdio.h>
#include <string.h>
#include <ctype.h>
int main(){
    char str[] = "alok#$@%^&1234";
    int alphacount = 0;
    int digitcount = 0;
    int spcount = 0;
    
    for(int i = 0; i < strlen(str); i++){
        if(isalpha(str[i])){
            alphacount++;
        }else if(isdigit(str[i])){
            digitcount++;
        }else{
            spcount++;
        }
    }
    printf("alphacount = %d\ndigitCount = %d\nspcount = %d",alphacount,digitcount,spcount);
}

---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
<--Sum of array element code with the help of dynamic allocation-->

#include <stdio.h>
#include <stdlib.h>

int main(){
    int *p, n;
    printf("Enter Number of element in array:\n");
    scanf("%d",&n);
    p = (int *) calloc(n,sizeof(int));
    
    printf("Enter array elements seprated by space/Enter\n");
    for(int i = 0; i < n; ++i){
        scanf("%d",p+i);
    }
    
    int sum = 0;
    for(int i = 0; i < n; ++i){
        sum += p[i]; //*(p+i);
    }
    
    printf("sum = %d", sum);
    
    free(p);
}
-----------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------
Advance C question no. 1:-

#include <string.h>
#include <stdio.h>

int noOfOddFreqElement(int oddNum,int n,int arr[n]){
    int count = 0;
    for(int i = 0; i < n; i++){
        if(oddNum == arr[i]){
            count++;
        }
    }
    return count;
}

int countoddfreq(int n, int arr[n]){
    int result = arr[0];
    for(int i = 1; i < n; i++){
        result = result ^ arr[i];
    }
    return result;
}

int main()
{
    int numArr[] = {5,4,5,4,5,4,5,4,5,4,5};
    int len = sizeof(numArr)/sizeof(numArr[0]);
    int countoddfreqele = countoddfreq(len, numArr);
    printf("CountOddFreqElement = %d\n",countoddfreqele);
    int noOfOddFreqEle = noOfOddFreqElement(countoddfreqele,len,numArr);
    printf("noOfOddFreqElement = %d\n",noOfOddFreqEle);
    return 0;
}

-----------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------
Advance C question no. 2:-

#include <stdio.h>
#include <math.h>

int calculator(float num1, float num2){
    int choice;
    while(1){
        printf("Enter choice:\n    1 for addition\n    2 for multiplication\n    3 for addition\n    4 for log\n    5 for power\n    6 Clear the console and take user inputs again\n    Invalid Choice\n");
        scanf("%d",&choice);
        switch(choice){
            case 1: 
                printf("Sum of %.2f and %.2lf is %.2lf\n",num1,num2,num1+num2);
                break;
            case 2:
                printf("Multiplication of %.2f and %.2lf is %.2lf\n",num1,num2,num1*num2);
                break;
            case 3:
                printf("Division of %.2f and %.2lf is %.2lf\n",num1,num2,num1/num2);
                break;
            case 4:
                printf("Log of %f base e is %.2lf\n",num1,log(num1));
                break;
            case 5:
                printf("Power of %f to power of %.2lf is %.2lf\n",num1,num2,pow(num1,num2));
                break;
            case 6:
                return 0;
            default:
                printf("Invalid Choice.\n");
                return 0;
        }
    }
}

int main(){
    float num1, num2;
    printf("Enter two value seprated by space:\n");
    scanf("%f %f", &num1, &num2);

    int (*p)(float, float);
    p = calculator;
    p(num1, num2);
}
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

Write a program in C to count the total number of words in a string:-

#include <stdio.h>
#include <string.h>
#define str_size 100

int main()
{
    char str[str_size];
    int i = 0, word = 0;
    
    printf("Input the string : ");
    fgets(str, sizeof(str), stdin);
    
    while(str[i] != '\0'){
        if(str[i] == ' ' || str[i] == '\n' || str[i] == '\t'){
            word++;
        }
        i++;
    }
    printf("Total number of words in the string is : %d\n", word);
    return 0;
}

-------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------
Check the length of two strings:-

#include <stdio.h>

int main(){
    
    char str1[] = "aabbcc";
    char str2[] = "aabbccc";
    
    
    int flag = 1;
    for(int i = 0; (str1[i] != '\0' || str2[i] != '\0'); i++){
        if((str1[i] == '\0' && str2[i] != '\0') || (str1[i] != '\0' && str2[i] == '\0') || str1[i] != str2[i]){
            flag = 0;
        }
    }
    
    if(flag){
        printf("Strings are equal.\n");
    }else{
        printf("Strings are not equal.");
    }
}

-------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------
Write a program in C to count the total number of alphabets, digits and special characters in a string.

#include <stdio.h>
#include <string.h>
#include <ctype.h>

int main(){
    
    char str[] = "Welcome to w3resource.com";
    int countAlpha = 0;
    int countDigit = 0;
    int spChars = 0;
    for(int i = 0; str[i] != '\0'; i++){
        if(isalpha(str[i])){
            countAlpha++;
        }else if(isdigit(str[i])){
            countDigit++;
        }else{
            spChars++;
        }
    }
    printf("Number of Alphabets in the string is : %d\nNumber of Digits in the string is : %d\nNumber of Special characters in the string is : %d",countAlpha,countDigit,spChars);
}

-------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------
Write a program in C to count the total number of vowels or consonants in a string:-

#include <stdio.h>
#include <string.h>

int main(){
    char str1[100], str2[100];
    printf("Enter a string:\n");
    fgets(str1, sizeof(str1), stdin);
    strcpy(str2,str1);
    printf("The First string is : %s",str1);
    printf("The Second string is : %s",str2);
    printf("Number of characters copied : %ld",strlen(str2));
    
    return 0;
}

-------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------

Write a program in C to find the maximum number of characters in a string:- 

#include <stdio.h>
#include <string.h>

int main(){
    char str[] = "Welcome to w3resource.com.";
    char ch_freq[255] = {0};
    int ascii;
    /* Read for frequency of each characters */
    for(int i = 0; str[i] != '\0'; i++){
        ascii = (int)str[i];
        ch_freq[ascii]++;
    }
    
    int max = 0;
    for(int i = 0; i < 255; i++){
        if(ch_freq[i] > ch_freq[max] && i != 32){
            max = i;
        }
    }
    printf("%d %c",ch_freq[max], max);
}

-------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------


<-- Sort a string -->
#include <stdio.h>
#include <string.h>

int main(){
    
    char str[] = "w3resource";
    printf("Before sorting the string appears like : \n");
    for(int i = 0; i < strlen(str); i++){
        printf("%c",str[i]);
    }
    
    for(int count = 0; count < strlen(str); count++){
        for(int i = 0; i < (strlen(str)-1-count); i++){
            if(str[i] > str[i+1]){
                char temp = str[i];
                str[i] = str[i+1];
                str[i+1] = temp;
            }
        }
    }
    printf("\nAfter sorting the string appears like : \n");
    for(int i = 0; i < strlen(str); i++){
        printf("%c",str[i]);
    }
    
}

-------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------
<-- Count vowel and consonant -->

#include <stdio.h>
int main(){
    
    char str[] = "Welcome to w3resource.com";
    int countVowel = 0;
    int countCosonant = 0;
    for(int i = 0; str[i] != '\0'; i++){
        if((str[i] >= 65 && str[i] <= 90) || (str[i] >= 97 && str[i] <= 122)){
            if(str[i] == 'a'|| str[i] == 'e' || str[i] == 'i' || str[i] == 'o' || str[i] == 'u' || str[i] == 'A'|| str[i] == 'E' || str[i] == 'I' || str[i] == 'O' || str[i] == 'U'){
                countVowel++;
            }else{
                countCosonant++;
            }
        }
    }
    printf("%d %d",countVowel, countCosonant);
}

-------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------
<-- Write a program in C to read a string from the keyboard and sort it using bubble sort. -->

#include <stdio.h>
#include <string.h>

int main(){
    
    int num;
    printf("How many number do you want to sort?\n");
    scanf("%d", &num);
    char str[num][20], temp[25];
    
    for(int i = 0; i < num; i++){
        scanf("%s",str[i]);
    }
    
    for(int i = 0; i < num; i++){
        for(int j = 0; j < num - 1 - i; j++){
            if(strcmp(str[j],str[j+1])>0){
                strcpy(temp,str[j]);
                strcpy(str[j],str[j+1]);
                strcpy(str[j+1],temp);
            }
        }
    }
    
    printf("The strings appears after sorting :\n");
	for(int i = 0; i < num; i++){
	    printf("%s\n", str[i]);
	}
	
}

-------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------
<--Write a program in C to extract a substring from a given string.-->

#include <stdio.h>
#include <string.h>
#include <ctype.h>

int main(){
    int si, ls;
    char subStr[20];
    char str[100];
    printf("Input the string :\n");
    scanf("%[^\n]",str);
    printf("Input the position to start extraction :\n");
    scanf("%d",&si);
    printf("Input the length of substring :\n");
    scanf("%d",&ls);
    
    for(int i = 0; i < ls; i++){
        subStr[i] = str[si+i-1];
    }

    printf("The substring retrieve from the string is : \"%s\"", subStr);
}

-------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------
<-- Write a C program to check whether a substring is present in a string. -->

#include <stdio.h>
#include <string.h>
#include <ctype.h>

int main(){
    int si, ls;
    char str[50];
    char subStr[10];
    printf("Input the string :\n");
    scanf("%[^\n]",str);
    printf("Input the SubString:\n");
    scanf("%s",subStr);
    char *ret = strstr(str,subStr);
    if(ret == NULL){
        printf("The substring is not exists in the string.");
    }else{
        printf("The substring is present");
    }
    return 0;
}

-------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------
<--Write a program in C to read a sentence and replace lowercase characters with uppercase and vice versa.-->

#include <stdio.h>
#include <string.h>
#include <ctype.h>

int main(){
    char str[50];
    printf("Enter a string:\n");
    scanf("%[^\n]",str);
    for(int i = 0; i < strlen(str); i++){
        if(str[i] >= 65 && str[i] <= 90){
            str[i] += 32;
        }else if(str[i] >= 97 && str[i] <= 122){
            str[i] -= 32;
        }
    }
    
    printf("%s",str);
}

-------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------
Write a program in C to combine two strings manually.

Test Data :
Input the first string : this is string one
Input the second string : this is string two

Expected Output :

After concatenation the string is : 
this is string one this is string two

#include <stdio.h>
#include <string.h>
#include <ctype.h>

int main(){
    char str1[100];
    char str2[100];
    printf("Enter a string1:\n");
    fgets(str1,sizeof(str1),stdin);
    printf("Enter a string2:\n");
    fgets(str2,sizeof(str2),stdin);
    
    int i = 0;
    for(i = 0; i < strlen(str1)-1; i++);
    str1[i] = ' ';
    i++;
    for(int j = 0; j < strlen(str2); j++,i++){
        str1[i] = str2[j];
    }
    
    printf("After concatenation the string is :\n");
    int k = strlen(str1);
    for(i=0; i < k; ++i)    
    {
        printf("%c",str1[i]);
    }
}
========================================================================================================================================================================================================================================

Write a program in C to find the largest and smallest words in a string. Go to the editor

Test Data :
Input the string : It is a string with smallest and largest word.

Expected Output :

The largest word is 'smallest'
and the smallest word is 'a' 
in the string : 'It is a string with smallest and largest word.'.

#include <stdio.h>
#include <string.h>
#include <ctype.h>

int main(){
    char str[100];
    char word[100];
    char maxWord[20];
    char minWord[20];
    
    printf("Enter a string:\n");
    fgets(str,sizeof(str),stdin);
    int max = 0, min = 100;
    for(int i = 0; str[i] != '\0'; i++){
        if(str[i] != ' '){
            int len = 0;
            while(str[i] != ' ' && str[i] != '\0'){
                word[len++] = str[i++];
            }
            word[len] = '\0';
            
            if(len > max){
                max = len;
                strcpy(maxWord, word);
            }
            
            if(len < min){
                min = len;
                strcpy(minWord, word);
            }
            
        }
    }
    
    printf("The largest word is '%s'\n", maxWord);
    printf("The smallest word is '%s'\n", minWord);
}

===============================================================================================================================
1. Write a program to findout prime numbers present in the given number range :-
Sample input :- 
8
32 
Sample Output :-
2,3,5
2,3,5,7,11,13,17,19,23,29,31

#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <string.h>

int main(){
    
    int firstNum;
    int lastNum;
    printf("Enter first number:\n");
    scanf("%d",&firstNum);
    printf("Enter last number:\n");
    scanf("%d",&lastNum);
    printf("Prime number in %d and %d: ",firstNum,lastNum);
    for(int num = firstNum; num <= lastNum; num++){
        int flag = 1;
        for(int i = 2; i*i < num; i++){
            if(num % i == 0){
                flag = 0;
                break;
            }
        }
        if(flag){
            printf("%d ",num);
        }
    }
}

==========================================================================================================================================================

2. Write a program to calculate the cost of each type of given chocolate as well as that total cost of chocolates:-
Sample Input :- "Dairy Milk : (41,21) 5 Star : (31,15) tantancy : (13,22)"
Sample Output :-
cost of Dairy Milk = 861
cost of 5 Star = 465
cost of tantancy = 286
total cost of chocolates = 1612

#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <string.h>

int main(){
    
    char str[] = "Dairy Milk : (41,21) 5 Star : (31,15) tantancy : (13,22)";
    
    int costDM, quantDM;
    int cost5Star, quant5Star;
    int costTantancy, quantTantancy;
    
    sscanf(str,"Dairy Milk : (%d,%d) 5 Star : (%d,%d) tantancy : (%d,%d)", &costDM, &quantDM, &cost5Star, &quant5Star, &costTantancy, &quantTantancy);
    
    int costOfAllDM = costDM * quantDM;
    int costOfAll5Star = cost5Star * quant5Star;
    int costOfAllTantancy = costTantancy * quantTantancy;
    
    int totalCost = costOfAllDM + costOfAll5Star + costOfAllTantancy;
    
    printf("cost of Dairy Milk = %d\n",costOfAllDM);
    printf("cost of 5 Star = %d\n", costOfAll5Star);
    printf("cost of tantancy = %d\n", costOfAllTantancy);
    printf("total cost of chocolates = %d\n", totalCost);
}


=======================================================================================================================================================

3. Write a program to find out given word Index from the given String as well as print the rest of the statements:-
Sample Input :-
The Sun rise in the east
rise
Sample Output :-
8
rise in the east
The Sun rise


#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <string.h>

int main(){
    char str[100];
    char subStr[20];
    printf("Enter a string:\n");
    scanf("%[^\n]%*c",str);
    printf("Enter a substring to find index and remaining string from string:\n");
    scanf("%s",subStr);
    
    char copy[100];
    strcpy(copy,str);
    
    int index = 0;
    int subStrLength = strlen(subStr);
    int subStrIndex = 0;
    for(int i = 0; i < strlen(str); i++){
        if(str[i] == subStr[index]){
            if(index == 0){
                subStrIndex = i;
            }
            index++;
            if(index == subStrLength){
                printf("%d\n",subStrIndex);
            }
        }else{
            index = 0;
            subStrIndex = -1;
        }
    }
    
    char *ret = strstr(copy,subStr);
    printf("%s\n",ret);
    
    char *token = strtok(copy," ");
    while(token != NULL){
        if(strcmp(token,subStr) == 0){
            printf("%s",token);
            break;
        }else{
            printf("%s ",token);
        }
        token = strtok(NULL," ");
    }
    
}

======================================================================================================================================================

4. Write a program to calculate sum of given numbers which is in string:-
Sample Input :-
"10,20,30,40,50"
"-10,-20,30,40,-50"
"-1,6,7"
"135st,25"
Sample Output :-
Sum = 150
Sum = -10
Sum = 10
Not Convertable format characters Sum = 0

#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <ctype.h>
#include <stdbool.h>

bool isNum(const char *str){
    for(int i = 0; i < strlen(str); i++){
        if(str[i] != '-' && !isdigit(str[i])){
            return false;
        }
    }
    return true;
}

int main(){
    char numStr[100];
    printf("Enter a string of numbers:\n");
    scanf("%[^\n]%*c",numStr);
    int sum = 0;
    char *token = strtok(numStr,",");
    
    while(token != NULL){
        if(isNum(token)){
            int num = atoi(token);
            sum += num;
        }else{
            printf("Not Convertable format characters ");
            printf("Sum = %d",sum=0);
            exit(1);
        }
        token = strtok(NULL,",");
    }
    printf("Sum = %d",sum);
}

======================================================================================================================================================

Write a program to convert given string into string array:-
Sample Input :- The Sun rise in the east
Sample Output :- the,sun,rise,in,the,east
This below function should be in the code:-
void display(char* arr[], int size){
	int i = 0;
	for(i = 0; i < size-1; i++){
		printf("%s",arr[i]);
		printf(",");
	}
	printf("%s",arr[i]);
}


#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>

void display(char *arr[], int size){
    int i = 0;
    printf("{");
    for(i = 0; i < size-1; i++){
        printf("%s",arr[i]);
        printf(",");
    }
    printf("%s}",arr[i]);
}

int main(){
    char str[100];
    char *arr[100];
    int size = 0;
    
    printf("Enter a String:\n");
    scanf("%[^\n]%*c",str);
    
    char *token = strtok(str," ");
    while(token != NULL){
        arr[size++] = token;
        token = strtok(NULL," ");
    }
    
    display(arr,size);
}

======================================================================================================================================================









